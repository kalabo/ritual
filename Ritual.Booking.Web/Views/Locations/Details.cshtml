@model Ritual.Booking.Data.LocationDetailData

@{
    ViewBag.Title = "Ritual Location Details";
}


<section class="content-header">
    <div class="row">
        <div class="large-12 columns">
            <h1>@ViewBag.Title</h1>
        </div>
    </div>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="large-12">
            <h2>Location Details</h2>
            <p>
                @Html.ActionLink("Edit", "Edit", new { id = Model.Location.Id }, new { @class = "button" })
                @Html.ActionLink("Back to List", "Index", null, new { @class = "button" })
            </p>
        </div>
    </div>
    <div class="row">
        <div class="large-6 medium-6 columns">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Location.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.Address)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Address)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.PhoneNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.PhoneNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.PostCode)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.PostCode)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.Country)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Country)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.TimeZoneOffset)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.TimeZoneOffset)
                </dd>

            </dl>
        </div>
        <div class="large-6 medium-6 columns">
            <div id="ritualMap" style="position:relative; width:100%; height:280px;"></div>
        </div>
    </div>
    <div class="row">
        <div class="large-6 medium-6 columns">
            <h2>Opening Hours</h2>
            <table class="table">
                <tr>
                    <th>Day of Week</th>
                    <th>Open Time</th>
                    <th>Close Time</th>
                    <th>Action</th>
                </tr>
                @foreach (var item in Model.OpeningHours)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.DayOfWeekText)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OpenTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CloseTime)
                        </td>
                        <td>
                            @Html.ActionLink("Select", "Index", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                            @Html.ActionLink("Edit", "Edit", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                            @Html.ActionLink("Details", "Details", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                            @Html.ActionLink("Delete", "Delete", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                        </td>
                    </tr>
                }
            </table>
        </div>
        <div class="large-6 medium-6 columns">
            <h2>Un-scheduled Closures</h2>
            <table class="table">
                <tr>
                    <th>Start Date</th>
                    <th>Start Time</th>
                    <th>End Date</th>
                    <th>End Time</th>
                    <th>Reason</th>
                    <th>Action</th>
                </tr>
                @foreach (var item in Model.OpeningHourOverrides)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.OverrideStartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AltOpenTime)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OverrideEndDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AltCloseTme)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OverrideReason)
                        </td>
                        <td>
                            @Html.ActionLink("Select", "Index", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                            @Html.ActionLink("Edit", "Edit", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                            @Html.ActionLink("Details", "Details", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                            @Html.ActionLink("Delete", "Delete", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</section>


@section Scripts {
    <script type="text/javascript" src="http://ecn.dev.virtualearth.net/mapcontrol/mapcontrol.ashx?v=7.0"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            getMapData();
        });

        var map = null;
        function LoadMap(long, lat){
            console.log(long);
            console.log(lat);
            map = new Microsoft.Maps.Map(document.getElementById('ritualMap'),
                {
                    credentials: "AjtUzWJBHlI3Ma_Ke6Qv2fGRXEs0ua5hUQi54ECwfXTiWsitll4AkETZDihjcfeI",
                    center: new Microsoft.Maps.Location(lat,long),
                    mapTypeId: Microsoft.Maps.MapTypeId.road,
                    zoom:16
                });
            var center = map.getCenter();

            var pin = new Microsoft.Maps.Pushpin(center, {icon : '/Content/images/ritual_pushpin.png', width: 50, height:50});
            map.entities.push(pin);
        }

        function getMapData()
        {
            var url = "/Locations/GetCurrentLocationMapData";
            $.getJSON(url, { id: @Html.DisplayFor(model => model.Location.Id) }, function (data) {
                LoadMap(data[0].longitude, data[0].latitude);           
            });
        }


    </script>
}

