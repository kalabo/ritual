@model Ritual.Data.Location

@{
    ViewBag.Title = "Edit - " + Model.Name;
}

<section class="content-header">
    <div class="row">
        <div class="large-12 columns">
            <h1>@ViewBag.Title</h1>
        </div>
    </div>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="large-6 medium-6 columns">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PostCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Country, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Country, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AvailableSlots, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AvailableSlots, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AvailableSlots, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TimeZoneOffset, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TimeZoneOffset, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimeZoneOffset, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "map-for-latitude editor form-control" } })
                            @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "map-for-longitude editor form-control" } })
                            @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="button" />
                        </div>
                    </div>
                </div>
            }

            <div>
                @Html.ActionLink("Delete", "Delete", new { id = Model.Id }, new { @class = "button cancel" })
                @Html.ActionLink("Back to List", "Index", "", new { @class = "button" })
            </div>
        </div>
        <div class="large-6 medium-6 columns">
            <div class="location-map"></div>
            <h2>Opening Hours</h2>
            <table class="table">
                <tr>
                    <th>Day of Week</th>
                    <th>Open Time</th>
                    <th>Close Time</th>
                    <th>Action</th>
                </tr>
                @if (Model.OpeningHours.Count > 0)
                {
                    foreach (var item in Model.OpeningHours)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.DayOfWeekText)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OpenTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CloseTime)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "EditOpeningHour", "Locations", new { id = item.Id, locationId = Model.Id }, new { @class = "button" })
                                @Html.ActionLink("Delete", "DeleteOpeningHour", "Locations", new { id = item.Id, locationId = Model.Id }, new { @class = "button" })
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">
                            <div class="alert-box">No Unscheduled Hours</div>
                        </td>
                    </tr>
                }
            </table>
            <div>
                @Html.ActionLink("Add Opening Hour", "CreateOpeningHour", new { locationId = Model.Id }, new { @class = "button" })
            </div>
            <h2>Un-scheduled Closures</h2>
            <table class="table">
                <tr>
                    <th>Start Date</th>
                    <th>Start Time</th>
                    <th>End Date</th>
                    <th>End Time</th>
                    <th>Reason</th>
                    <th>Action</th>
                </tr>
                @if (Model.OpeningHourOverrides.Count > 0)
                {
                    foreach (var item in Model.OpeningHourOverrides)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.OverrideStartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AltOpenTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OverrideEndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AltCloseTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OverrideReason)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "EditOpeningHourOverride", "Locations", new {id = item.Id, locationId = Model.Id}, new {@class = "button"})
                                @Html.ActionLink("Delete", "DeleteOpeningHourOverride", "Locations", new {id = item.Id, locationId = Model.Id}, new {@class = "button"})
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">
                            <div class="alert-box">No Unscheduled Hours</div>
                        </td>
                    </tr>
                }
            </table>
            <div>
                @Html.ActionLink("Add Unscheduled Hour", "CreateOpeningHourOverride", new { locationId = Model.Id }, new { @class = "button" })
            </div>
            <h2>Trial Time Blocks</h2>
            <table class="table">
                <tr>
                    <th>Day of Week</th>
                    <th>Start Time</th>
                    <th>End Time</th>
                    <th>Action</th>
                </tr>
                @if (Model.TrialTimeBlocks.Count > 0)
                {
                    foreach (var item in Model.TrialTimeBlocks)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.DayOfWeekText)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EndTime)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "TrialTimeBlocks", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Delete", "Delete", "TrialTimeBlocks", new { id = item.Id }, new { @class = "button" })
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6">
                            <div class="alert-box">No Trial Slot Hours Configured</div>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/EFSpatialGoogleMaps.js" /></script>
}
