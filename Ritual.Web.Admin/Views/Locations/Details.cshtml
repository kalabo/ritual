@model Ritual.Data.LocationDetailData

@{
    ViewBag.Title = "Ritual Location Details - " + Model.Location.Name;
}

<input type="hidden" id="locationId" value="@Model.Location.Id"/>
<section class="content-header">
    <div class="row">
        <div class="large-12 columns">
            <h1>@ViewBag.Title</h1>
        </div>
    </div>
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="large-12 medium-12 columns">
            @Html.ActionLink("Edit", "Edit", new { id = Model.Location.Id }, new { @class = "button" })
            @Html.ActionLink("Back to List", "Index", null, new { @class = "button" })
        </div>
    </div>

    <div class="row">
        <div class="large-3 columns">
            <div class="canvas-holder" id="locationCurrentMembersCanvas">
                <canvas id="locationCurrentMembers" width="200" height="200"></canvas>
            </div>
        </div>
        <div class="large-3 columns">
            <div class="canvas-holder" id="locationMembersTermCanvas">
                <canvas id="locationMembersTerm" width="200" height="200"></canvas>
            </div>
        </div>
        <div class="large-3 columns">
            <div class="canvas-holder" id="locationMembersTypeCanvas">
                <canvas id="locationMembersType" width="200" height="200"></canvas>
            </div>
        </div>
        <div class="large-3 columns">
            <div class="canvas-holder" id="locationMembersPaymentCanvas">
                <canvas id="locationMembersPayment" width="200" height="200"></canvas>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="large-6 medium-6 columns">

            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Location.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Name)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.Address)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Address)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.PhoneNumber)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.PhoneNumber)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.PostCode)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.PostCode)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.Country)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Country)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.AvailableSlots)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.AvailableSlots)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.TimeZoneOffset)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.TimeZoneOffset)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Location.Longitude)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Longitude)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Location.Latitude)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Location.Latitude)
                </dd>
                <input type="hidden" name="location_lat" value="@Model.Location.Latitude" class="map-for-latitude" />
                <input type="hidden" name="location_lng" value="@Model.Location.Longitude" class="map-for-longitude" />
            </dl>
        </div>
        <div class="large-6 medium-6 columns">
            <div class="location-map"></div>
        </div>
    </div>
    <div class="row">
        <div class="large-6 medium-6 columns">
            <h2>Opening Hours</h2>
            <table class="table">
                <tr>
                    <th>Day of Week</th>
                    <th>Open Time</th>
                    <th>Close Time</th>
                    <th>Action</th>
                </tr>
                @if (Model.OpeningHours.Count() > 0)
                {
                    foreach (var item in Model.OpeningHours)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.DayOfWeekText)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OpenTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CloseTime)
                            </td>
                            <td>
                                @Html.ActionLink("Select", "Index", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Edit", "Edit", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Details", "Details", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Delete", "Delete", "QuarterlyAsssessments", new { id = item.Id }, new { @class = "button" })
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="4"><div class="alert-box">You have not set any Opening Hours for this location</div></td></tr>
                }
            </table>
        </div>
        <div class="large-6 medium-6 columns">
            <h2>Un-scheduled Closures</h2>
            <table class="table">
                <tr>
                    <th>Start Date</th>
                    <th>Start Time</th>
                    <th>End Date</th>
                    <th>End Time</th>
                    <th>Reason</th>
                    <th>Action</th>
                </tr>
                @if (Model.OpeningHourOverrides.Count() > 0)
                {
                    foreach (var item in Model.OpeningHourOverrides)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.OverrideStartDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AltOpenTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OverrideEndDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.AltCloseTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OverrideReason)
                            </td>
                            <td>
                                @Html.ActionLink("Select", "Index", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Edit", "Edit", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Details", "Details", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                                @Html.ActionLink("Delete", "Delete", "OpeningHourOverride", new { id = item.Id }, new { @class = "button" })
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="4"><div class="alert-box">You have not set any Override Opening Hours for this location</div></td></tr>
                }
            </table>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/EFSpatialGoogleMaps.js" /></script>
    <script type="text/javascript" />
    $(document).ready(function(){
    RITUAL.Core.Locations.Charts();
    });
    </script>
}

